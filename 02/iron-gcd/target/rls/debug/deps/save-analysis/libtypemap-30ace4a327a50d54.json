{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3","program":"/Users/ryan/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","typemap","/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=30ace4a327a50d54","-C","extra-filename=-30ace4a327a50d54","--out-dir","/Users/ryan/Documents/Learn/Rust/Programming Rust/02/iron-gcd/target/rls/debug/deps","-L","dependency=/Users/ryan/Documents/Learn/Rust/Programming Rust/02/iron-gcd/target/rls/debug/deps","--extern","unsafe_any=/Users/ryan/Documents/Learn/Rust/Programming Rust/02/iron-gcd/target/rls/debug/deps/libunsafe_any-687421d78c1b4ed6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ryan/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/ryan/Documents/Learn/Rust/Programming Rust/02/iron-gcd/target/rls/debug/deps/libtypemap-30ace4a327a50d54.rmeta"},"prelude":{"crate_id":{"name":"typemap","disambiguator":[4342910116112114689,4805652522626956517]},"crate_root":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src","external_crates":[{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[603768172935898252,12826861070591240039]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2815287589761039113,10394028720975510729]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2767677032142059259,16201317947151056619]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6569532271832813357,5558644548179987880]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15181256660015208263,13424169250424380958]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14449708302553378442,6764885577286104745]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6031119962407932860,17656264859539038673]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[808968361697194830,9958745973731971949]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[5829393040043201517,8019829011363502576]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[12877238486384162475,10128020229416976087]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10813448863768151158,12612650826246199558]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1691828324011210183,9130257789058614790]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6501707610122218584,5103828404955810242]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9512619531860128780,14710227587784000208]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":15,"id":{"name":"unsafe_any","disambiguator":[17615910499773017374,17509810526377767482]}},{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","num":16,"id":{"name":"traitobject","disambiguator":[16040701344157170059,3674145677216505911]}}],"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":0,"byte_end":11271,"line_start":1,"line_end":352,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":340,"byte_end":348,"line_start":14,"line_end":14,"column_start":21,"column_end":29},"alias_span":null,"name":"CloneAny","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":350,"byte_end":358,"line_start":14,"line_end":14,"column_start":31,"column_end":39},"alias_span":null,"name":"DebugAny","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":0,"byte_end":11271,"line_start":1,"line_end":352,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":188},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":70},{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":93},{"krate":0,"index":99},{"krate":0,"index":108},{"krate":0,"index":113}],"decl_id":null,"docs":" A type-based key value store where one value type is allowed for each key.\n","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":787,"byte_end":794,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"TypeMap","qualname":"::TypeMap","value":"TypeMap {  }","parent":null,"children":[{"krate":0,"index":187}],"decl_id":null,"docs":" A map keyed by types.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1148,"byte_end":1155,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"SendMap","qualname":"::SendMap","value":"TypeMap<UnsafeAny + Send>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Send` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1252,"byte_end":1259,"line_start":43,"line_end":43,"column_start":10,"column_end":17},"name":"SyncMap","qualname":"::SyncMap","value":"TypeMap<UnsafeAny + Sync>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Sync` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1363,"byte_end":1371,"line_start":46,"line_end":46,"column_start":10,"column_end":18},"name":"ShareMap","qualname":"::ShareMap","value":"TypeMap<UnsafeAny + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Send + Sync` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":27},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1476,"byte_end":1484,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"CloneMap","qualname":"::CloneMap","value":"TypeMap<CloneAny>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Clone` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1588,"byte_end":1601,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"ShareCloneMap","qualname":"::ShareCloneMap","value":"TypeMap<CloneAny + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Clone + Send + Sync` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1705,"byte_end":1713,"line_start":55,"line_end":55,"column_start":10,"column_end":18},"name":"DebugMap","qualname":"::DebugMap","value":"TypeMap<DebugAny>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Debug` types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":1817,"byte_end":1830,"line_start":58,"line_end":58,"column_start":10,"column_end":23},"name":"ShareDebugMap","qualname":"::ShareDebugMap","value":"TypeMap<DebugAny + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" A version of `TypeMap` containing only `Debug + Send + Sync` types.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2485,"byte_end":2488,"line_start":80,"line_end":80,"column_start":11,"column_end":14},"name":"Key","qualname":"::Key","value":"Key: Any","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" This trait defines the relationship between keys and values in a TypeMap.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2559,"byte_end":2564,"line_start":82,"line_end":82,"column_start":10,"column_end":15},"name":"Value","qualname":"::Key::Value","value":"type Value: Any;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The value type associated with this key type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2637,"byte_end":2640,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeMap>::new","value":"fn () -> TypeMap","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty TypeMap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2934,"byte_end":2940,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"custom","qualname":"<TypeMap<A>>::custom","value":"fn () -> TypeMap<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty TypeMap.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":3101,"byte_end":3107,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"insert","qualname":"<TypeMap<A>>::insert","value":"fn <K> (&mut self, val: K::Value) -> Option<K::Value>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into the map with a specified key type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":3420,"byte_end":3423,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"get","qualname":"<TypeMap<A>>::get","value":"fn <K> (&self) -> Option<&K::Value>","parent":null,"children":[],"decl_id":null,"docs":" Find a value in the map and get a reference to it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":3708,"byte_end":3715,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TypeMap<A>>::get_mut","value":"fn <K> (&mut self) -> Option<&mut K::Value>","parent":null,"children":[],"decl_id":null,"docs":" Find a value in the map and get a mutable reference to it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":4011,"byte_end":4019,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypeMap<A>>::contains","value":"fn <K> (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a key has an associated value stored in the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":4206,"byte_end":4212,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypeMap<A>>::remove","value":"fn <K> (&mut self) -> Option<K::Value>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":4519,"byte_end":4524,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"entry","qualname":"<TypeMap<A>>::entry","value":"fn <'a, K> (&'a mut self) -> Entry<'a, K, A>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":4933,"byte_end":4937,"line_start":152,"line_end":152,"column_start":19,"column_end":23},"name":"data","qualname":"<TypeMap<A>>::data","value":"fn (&self) -> &HashMap<TypeId, Box<A>>","parent":null,"children":[],"decl_id":null,"docs":" Read the underlying HashMap\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5077,"byte_end":5085,"line_start":157,"line_end":157,"column_start":19,"column_end":27},"name":"data_mut","qualname":"<TypeMap<A>>::data_mut","value":"fn (&mut self) -> &mut HashMap<TypeId, Box<A>>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying HashMap\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5224,"byte_end":5227,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"len","qualname":"<TypeMap<A>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of values stored in the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5339,"byte_end":5347,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TypeMap<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the map contains no values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5453,"byte_end":5458,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypeMap<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all entries from the map.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":74},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5669,"byte_end":5677,"line_start":180,"line_end":180,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, A>)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" A view onto an occupied entry in a TypeMap.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":77},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5762,"byte_end":5768,"line_start":182,"line_end":182,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, A>)","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" A view onto an unoccupied entry in a TypeMap.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":70},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5555,"byte_end":5560,"line_start":178,"line_end":178,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":77}],"decl_id":null,"docs":" A view onto an entry in a TypeMap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":6026,"byte_end":6035,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: K::Value) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":6452,"byte_end":6466,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":6788,"byte_end":6801,"line_start":208,"line_end":208,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" A view onto an occupied entry in a TypeMap.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7001,"byte_end":7012,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" A view onto an unoccupied entry in a TypeMap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7275,"byte_end":7278,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &K::Value","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the entry's value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7493,"byte_end":7500,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut K::Value","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the entry's value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7761,"byte_end":7769,"line_start":237,"line_end":237,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":" Transform the entry into a mutable reference with the same lifetime as the map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":8002,"byte_end":8008,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: K::Value) -> K::Value","parent":null,"children":[],"decl_id":null,"docs":" Set the entry's value and return the previous value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":8276,"byte_end":8282,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> K::Value","parent":null,"children":[],"decl_id":null,"docs":" Move the entry's value out of the map, consuming the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":8578,"byte_end":8584,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: K::Value) -> &'a mut K::Value","parent":null,"children":[],"decl_id":null,"docs":" Set the entry's value and return a mutable reference to it.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":119},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11763,"byte_end":11771,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"DebugAny","qualname":"::internals::DebugAny","value":"DebugAny: Any + Debug","parent":null,"children":[],"decl_id":null,"docs":" A marker trait meant for use as the `A` parameter in `TypeMap`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12435,"byte_end":12443,"line_start":29,"line_end":29,"column_start":11,"column_end":19},"name":"CloneAny","qualname":"::internals::CloneAny","value":"CloneAny: Any","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" A marker trait meant for use as the `A` parameter in `TypeMap`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12477,"byte_end":12486,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"clone_any","qualname":"::internals::CloneAny::clone_any","value":"fn (&self) -> Box<CloneAny>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12538,"byte_end":12552,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"clone_any_send","qualname":"::internals::CloneAny::clone_any_send","value":"fn (&self) -> Box<CloneAny + Send>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12628,"byte_end":12642,"line_start":35,"line_end":35,"column_start":8,"column_end":22},"name":"clone_any_sync","qualname":"::internals::CloneAny::clone_any_sync","value":"fn (&self) -> Box<CloneAny + Sync>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12718,"byte_end":12737,"line_start":37,"line_end":37,"column_start":8,"column_end":27},"name":"clone_any_send_sync","qualname":"::internals::CloneAny::clone_any_send_sync","value":"fn (&self) -> Box<CloneAny + Send + Sync>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":149},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13976,"byte_end":13986,"line_start":79,"line_end":79,"column_start":18,"column_end":28},"name":"Implements","qualname":"::internals::Implements","value":"Implements<A: ?Sized + UnsafeAnyExt>","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14022,"byte_end":14033,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"into_object","qualname":"::internals::Implements::into_object","value":"fn (self) -> Box<A>","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":905,"byte_end":912,"line_start":32,"line_end":32,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2579,"byte_end":2586,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2722,"byte_end":2729,"line_start":92,"line_end":92,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5855,"byte_end":5860,"line_start":185,"line_end":185,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7192,"byte_end":7205,"line_start":219,"line_end":219,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":8475,"byte_end":8486,"line_start":261,"line_end":261,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11823,"byte_end":11824,"line_start":14,"line_end":14,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11859,"byte_end":11867,"line_start":16,"line_end":16,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12838,"byte_end":12839,"line_start":40,"line_end":40,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13281,"byte_end":13284,"line_start":57,"line_end":57,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13377,"byte_end":13380,"line_start":61,"line_end":61,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13492,"byte_end":13495,"line_start":65,"line_end":65,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13607,"byte_end":13610,"line_start":69,"line_end":69,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13755,"byte_end":13763,"line_start":73,"line_end":73,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14106,"byte_end":14107,"line_start":83,"line_end":83,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14243,"byte_end":14244,"line_start":87,"line_end":87,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14387,"byte_end":14388,"line_start":91,"line_end":91,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14545,"byte_end":14546,"line_start":95,"line_end":95,"column_start":83,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14678,"byte_end":14679,"line_start":99,"line_end":99,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14812,"byte_end":14813,"line_start":103,"line_end":103,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14967,"byte_end":14968,"line_start":107,"line_end":107,"column_start":81,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15099,"byte_end":15100,"line_start":111,"line_end":111,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15231,"byte_end":15232,"line_start":115,"line_end":115,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15370,"byte_end":15371,"line_start":119,"line_end":119,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15523,"byte_end":15524,"line_start":123,"line_end":123,"column_start":79,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":905,"byte_end":912,"line_start":32,"line_end":32,"column_start":27,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":80,"line_end":80,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2316},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2579,"byte_end":2586,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":2722,"byte_end":2729,"line_start":92,"line_end":92,"column_start":32,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":5855,"byte_end":5860,"line_start":185,"line_end":185,"column_start":61,"column_end":66},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":7192,"byte_end":7205,"line_start":219,"line_end":219,"column_start":44,"column_end":57},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/lib.rs","byte_start":8475,"byte_end":8486,"line_start":261,"line_end":261,"column_start":44,"column_end":55},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11773,"byte_end":11776,"line_start":13,"line_end":13,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2316},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11779,"byte_end":11784,"line_start":13,"line_end":13,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":7575},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11823,"byte_end":11824,"line_start":14,"line_end":14,"column_start":35,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":11859,"byte_end":11867,"line_start":16,"line_end":16,"column_start":30,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":119},"to":{"krate":15,"index":16}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12445,"byte_end":12448,"line_start":29,"line_end":29,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2316},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":12838,"byte_end":12839,"line_start":40,"line_end":40,"column_start":35,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13281,"byte_end":13284,"line_start":57,"line_end":57,"column_start":16,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13377,"byte_end":13380,"line_start":61,"line_end":61,"column_start":16,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13492,"byte_end":13495,"line_start":65,"line_end":65,"column_start":16,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13607,"byte_end":13610,"line_start":69,"line_end":69,"column_start":16,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":2183}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":13755,"byte_end":13763,"line_start":73,"line_end":73,"column_start":30,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":126},"to":{"krate":15,"index":16}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14106,"byte_end":14107,"line_start":83,"line_end":83,"column_start":53,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14243,"byte_end":14244,"line_start":87,"line_end":87,"column_start":69,"column_end":70},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14387,"byte_end":14388,"line_start":91,"line_end":91,"column_start":69,"column_end":70},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":159},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14545,"byte_end":14546,"line_start":95,"line_end":95,"column_start":83,"column_end":84},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":162},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14678,"byte_end":14679,"line_start":99,"line_end":99,"column_start":51,"column_end":52},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14812,"byte_end":14813,"line_start":103,"line_end":103,"column_start":67,"column_end":68},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":14967,"byte_end":14968,"line_start":107,"line_end":107,"column_start":81,"column_end":82},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15099,"byte_end":15100,"line_start":111,"line_end":111,"column_start":51,"column_end":52},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":174},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15231,"byte_end":15232,"line_start":115,"line_end":115,"column_start":65,"column_end":66},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15370,"byte_end":15371,"line_start":119,"line_end":119,"column_start":65,"column_end":66},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":180},"to":{"krate":0,"index":149}},{"span":{"file_name":"/Users/ryan/.cargo/registry/src/github.com-1ecc6299db9ec823/typemap-0.3.3/src/internals.rs","byte_start":15523,"byte_end":15524,"line_start":123,"line_end":123,"column_start":79,"column_end":80},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":149}}]}